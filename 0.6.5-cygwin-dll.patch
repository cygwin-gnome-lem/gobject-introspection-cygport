--- origsrc/gobject-introspection-0.6.5/girepository/gtypelib.c	2009-08-20 16:10:51.000000000 -0500
+++ src/gobject-introspection-0.6.5/girepository/gtypelib.c	2009-09-07 21:11:57.849689300 -0500
@@ -1997,7 +1997,10 @@ _g_typelib_do_dlopen (GTypelib *typelib)
               module = g_module_open (shlib_full->str, G_MODULE_BIND_LAZY);
               if (module == NULL)
                 {
-                  g_string_overwrite (shlib_full, strlen (shlib_full->str)-2, SHLIB_SUFFIX);
+                  g_string_overwrite (shlib_full, strlen (shlib_full->str)-strlen (SHLIB_SUFFIX), SHLIB_SUFFIX);
+#ifdef G_WITH_CYGWIN
+                  g_string_overwrite (shlib_full, 0, "cyg");
+#endif
                   module = g_module_open (shlib_full->str, G_MODULE_BIND_LAZY);
                 }
 
--- origsrc/gobject-introspection-0.6.5/giscanner/dumper.py	2009-09-01 09:55:57.000000000 -0500
+++ src/gobject-introspection-0.6.5/giscanner/dumper.py	2009-09-07 18:58:40.395487900 -0500
@@ -174,12 +174,14 @@ class DumpCompiler(object):
             args.append('--tag=CC')
             args.append('--silent')
 
-        args.extend([self._linker_cmd, '-o', output])
+        args.extend([self._linker_cmd, '-o', output + '.exe'])
+        args.extend(list(sources))
 
         # Make sure to list the library to be introspected first since it's
         # likely to be uninstalled yet and we want the uninstalled RPATHs have
         # priority (or we might run with installed library that is older)
 
+        args.append('-Wl,--export-all-symbols')
         # Search the current directory first
         args.append('-L.')
 
@@ -207,7 +209,6 @@ class DumpCompiler(object):
             if not os.path.exists(source):
                 raise CompilerError(
                     "Could not find object file: %s" % (source, ))
-        args.extend(list(sources))
 
         subprocess.check_call(args)
 
--- origsrc/gobject-introspection-0.6.5/giscanner/libtoolimporter.py	2009-07-09 12:20:46.000000000 -0500
+++ src/gobject-introspection-0.6.5/giscanner/libtoolimporter.py	2009-09-07 18:58:40.399238000 -0500
@@ -50,7 +50,7 @@ class LibtoolImporter(object):
     def load_module(self, name):
         realpath = extract_libtool(self.path)
         mod = imp.load_module(name, open(realpath), realpath,
-                              ('.so', 'rb', 3))
+                              ('.dll', 'rb', 3))
         mod.__loader__ = self
         return mod
 
--- origsrc/gobject-introspection-0.6.5/giscanner/shlibs.py	2009-08-16 23:22:01.000000000 -0500
+++ src/gobject-introspection-0.6.5/giscanner/shlibs.py	2009-09-07 22:39:31.767220700 -0500
@@ -46,7 +46,7 @@ def _resolve_libtool(options, binary, li
 # is crazy enough to name a library liblib<foo> when lib<foo> exists.
 #
 def _ldd_library_pattern(library_name):
-    return re.compile("(?<![A-Za-z0-9_-])(lib*%s[^A-Za-z0-9_-][^\s\(\)]*)"
+    return re.compile("(cyg%s-*[0-9]*\.dll)"
                       % re.escape(library_name))
 
 # This is a what we do for non-la files. We assume that we are on an
--- origsrc/gobject-introspection-0.6.5/giscanner/utils.py	2009-08-17 06:24:08.000000000 -0500
+++ src/gobject-introspection-0.6.5/giscanner/utils.py	2009-09-07 22:30:45.525429900 -0500
@@ -45,7 +45,7 @@ def to_underscores_noprefix(name):
     name = _upperstr_pat2.sub(r'\1_\2', name)
     return name
 
-_libtool_pat = re.compile("dlname='([A-z0-9\.\-\+]+)'\n")
+_libtool_pat = re.compile("dlname='([A-z0-9/\.\-\+]+)'\n")
 
 def _extract_dlname_field(la_file):
     f = open(la_file)
